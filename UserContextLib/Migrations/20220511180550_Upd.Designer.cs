// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserContextLib;

#nullable disable

namespace UserContextLib.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20220511180550_Upd")]
    partial class Upd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserContextLib.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = new byte[] { 5, 28, 245, 103, 4, 117, 124, 103, 186, 158, 99, 109, 129, 105, 25, 7, 65, 119, 171, 59, 54, 126, 26, 185, 143, 1, 79, 91, 109, 137, 80, 205, 127, 255, 236, 136, 137, 111, 179, 52, 196, 5, 217, 254, 48, 23, 15, 107, 176, 108, 225, 8, 18, 136, 95, 55, 77, 47, 215, 26, 236, 242, 39, 39 },
                            PasswordSalt = new byte[] { 190, 33, 35, 173, 143, 251, 78, 146, 161, 29, 146, 103, 194, 55, 25, 186, 80, 239, 71, 186, 65, 187, 115, 135, 109, 190, 83, 7, 71, 73, 146, 43, 249, 206, 14, 178, 64, 39, 163, 91, 56, 116, 14, 254, 52, 189, 252, 158, 194, 241, 146, 134, 102, 237, 128, 99, 10, 129, 70, 223, 150, 229, 219, 60, 175, 139, 76, 34, 30, 197, 70, 2, 175, 128, 137, 69, 238, 82, 58, 21, 23, 42, 54, 71, 237, 189, 152, 228, 30, 250, 186, 45, 53, 21, 39, 184, 246, 0, 246, 200, 70, 153, 21, 163, 155, 166, 186, 241, 207, 183, 58, 123, 230, 73, 163, 174, 233, 80, 177, 132, 178, 142, 16, 181, 171, 14, 2, 179 },
                            Role = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
